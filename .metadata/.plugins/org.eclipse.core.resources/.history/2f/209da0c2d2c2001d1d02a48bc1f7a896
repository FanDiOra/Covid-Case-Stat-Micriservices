package com.agrosofttechnologies.covidcaseregistration.controller;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.bind.BindHandler;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.agrosofttechnologies.covidcaseregistration.Entities.CovidCase;
import com.agrosofttechnologies.covidcaseregistration.bean.ResponseError;
import com.agrosofttechnologies.covidcaseregistration.repository.CovidCaseRepository;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/fd-etu/agrosoft/covid/cases/covid-case-registration")
public class CovidCaseRegistrationController {

	@Autowired
	CovidCaseRepository repository;
	
	@Autowired
	private ResponseError errorResponse;
	
	@PostMapping("/")
	public ResponseEntity<Object> createCovidCase (@Valid @RequestBody CovidCase covidCase, 
			BindingResult result) {
		try {
			if (result.hasErrors()) {
				String description = result.getAllErrors().get(0).getDefaultMessage();
				errorResponse.prepareBadRequestResponse(description);
				
				return ResponseEntity.badRequest().body(errorResponse);
			}
			
			CovidCase createdCovidCase = repository.save(covidCase);
			HashMap<String, Object> successResponse = new HashMap<>();
			successResponse.put("caseID", createdCovidCase.getCaseID());
			
		} catch (Exception e) {
			// TODO: handle exception
		}

		
		/*
		 * try { 
		 * response.prepareSuccessResponse(HttpStatus.CREATED.value(), "caseID : ",
		 * createdCovidCase.getCaseID());
		 * 
		 * return ResponseEntity.status(HttpStatus.CREATED).body(response.getBody()); }
		 * catch (DatabaseConnectivityException e) {
		 * 
		 * 
		 * }
		 */
		return null;
	}

	@PutMapping("/")
	public Integer updateCovidCase (@RequestBody CovidCase covidCase) {
		
		try {
			repository.save(covidCase);
			return covidCase.getCaseID();
		} catch (Exception e) {
			return -1;
		}
	
	}
	
	@GetMapping("/{nationalID}")
	public List<CovidCase> getCovidCasesByNationalID(@PathVariable("nationalID") String nationalID) {
		
		try {
			List<CovidCase> listCovidCases = repository.findByNationalID(nationalID);
			return listCovidCases;
		} catch (Exception e) {
			return null;
		}
		
	}
	
}
